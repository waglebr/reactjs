{"version":3,"sources":["components/counter.1.jsx","components/counters.1.jsx","components/navbar.jsx","App.js","serviceWorker.js","index.js"],"names":["Counter","_this$props","this","props","quantity","onIncrement","onDecrement","onRemove","onEmpty","react_default","a","createElement","className","id","disabled","value","onClick","badgeStyle","classes","Component","Counters","map","i","counter_1","key","NavBar","_ref","qtdTipos","qtdTotal","onReset","App","state","handleIncrement","qty","Object","toConsumableArray","_this","index","indexOf","setState","handleDecrement","handleEmpty","handleUpdate","document","querySelector","push","handleReset","handleRemove","qtyID","filter","handleTotal","x","_this2","Fragment","counters_1","navbar","length","type","Boolean","window","location","hostname","match","ReactDOM","render","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.261992de.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\n\r\nclass Counter extends Component {\r\n  render() {\r\n    const {\r\n      quantity,\r\n      onIncrement,\r\n      onDecrement,\r\n      onRemove,\r\n      onEmpty\r\n    } = this.props;\r\n    return (\r\n      // Returns a new React element:\r\n      <div>\r\n        <span className=\"badge mr-2 badge-dark\">\r\n          <h6>Product {quantity.id} :</h6>\r\n        </span>\r\n        <button\r\n          className=\"btn btn-warning btn-sm m-2\"\r\n          disabled={quantity.value < -4 ? true : false}\r\n          onClick={() => onDecrement(quantity)}>\r\n          -\r\n        </button>\r\n\r\n        <span className={this.badgeStyle()}>\r\n          {quantity.value === 5\r\n            ? \"Full: \" + quantity.value\r\n            : quantity.value === 0\r\n            ? \"Sold out\"\r\n            : quantity.value < -4\r\n            ? \"Total loss: \" + quantity.value\r\n            : quantity.value < 0\r\n            ? \"Loss: \" + quantity.value\r\n            : quantity.value}\r\n        </span>\r\n\r\n        <button\r\n          className=\"btn btn-success btn-sm mr-2\"\r\n          disabled={quantity.value >= 5 ? true : false}\r\n          onClick={() => onIncrement(quantity)}>\r\n          +\r\n        </button>\r\n\r\n        <button\r\n          className=\"btn btn-light btn-sm m-2\"\r\n          disabled={quantity.value <= 0 ? true : false}\r\n          onClick={() => onEmpty(quantity)}>\r\n          Sold out\r\n        </button>\r\n\r\n        <button\r\n          className=\"btn btn-danger btn-sm m-2\"\r\n          onClick={() => onRemove(quantity.id)}>\r\n          Remove\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  badgeStyle() {\r\n    let classes = \"badge m-2 badge-\";\r\n\r\n    if (this.props.quantity.value <= 0) {\r\n      return (classes += \"light\");\r\n    }\r\n\r\n    if (this.props.quantity.value === 5) {\r\n      return (classes += \"secondary\");\r\n    } else {\r\n      return (classes += \"primary\");\r\n    }\r\n  }\r\n}\r\n\r\nexport default Counter;\r\n","import React, { Component } from \"react\";\r\nimport Counter from \"./counter.1\";\r\n\r\nclass Counters extends Component {\r\n  render() {\r\n    // destructuring argument (instead of using \"props\")\r\n    const {\r\n      quantity,\r\n      onIncrement,\r\n      onDecrement,\r\n      onRemove,\r\n      onEmpty\r\n    } = this.props;\r\n    return (\r\n      <div>\r\n        {quantity.map(i => (\r\n          <Counter\r\n            key={i.id}\r\n            quantity={i}\r\n            onRemove={onRemove}\r\n            onEmpty={onEmpty}\r\n            onIncrement={onIncrement}\r\n            onDecrement={onDecrement}\r\n          />\r\n        ))}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Counters;\r\n","import React, { Component } from \"react\";\r\n//Stateless Functional Component\r\n// destructuring argument (instead of using \"props\")\r\nconst NavBar = ({ qtdTipos, qtdTotal, onReset }) => {\r\n  return (\r\n    <nav className=\"navbar navbar-dark\">\r\n      <nav className=\"navbar-brand\">\r\n        Sumary:\r\n        <br />\r\n        <span className=\"badge badge-pill badge-secondary\">\r\n          Products: {qtdTipos}\r\n        </span>\r\n        <br />\r\n        <span className=\"badge badge-pill badge-secondary\">\r\n          Total Quantity: {qtdTotal}\r\n        </span>\r\n        <span className=\"ml-4\">\r\n          <button className=\"btn btn-primary btn-sm\" onClick={onReset}>\r\n            Reset\r\n          </button>\r\n        </span>\r\n      </nav>\r\n    </nav>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\r\nimport Counters from \"./components/counters.1\";\r\nimport NavBar from \"./components/navbar\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    quantity: [\r\n      { id: \"A\", value: 1 },\r\n      { id: \"B\", value: 2 },\r\n      { id: \"C\", value: 3 },\r\n      { id: \"D\", value: 4 }\r\n    ]\r\n  };\r\n\r\n  handleIncrement = qty => {\r\n    const quantity = [...this.state.quantity];\r\n    const index = quantity.indexOf(qty);\r\n    quantity[index].value++;\r\n    //It's necessary to use arrow function to inherit the \"this\" reference: \"function name = () => {statement}\".\r\n    this.setState({\r\n      quantity\r\n    });\r\n  };\r\n  handleDecrement = qty => {\r\n    const quantity = [...this.state.quantity];\r\n    const index = quantity.indexOf(qty);\r\n    quantity[index].value--;\r\n    //It's necessary to use arrow function to inherit the \"this\" reference: \"function name = () => {statement}\".\r\n    this.setState({\r\n      quantity\r\n    });\r\n  };\r\n\r\n  handleEmpty = qty => {\r\n    const quantity = [...this.state.quantity];\r\n    const index = quantity.indexOf(qty);\r\n    quantity[index].value = 0;\r\n    this.setState({ quantity });\r\n  };\r\n  handleUpdate = () => {\r\n    const id = document.querySelector(\"#field1\").value;\r\n    const value = document.querySelector(\"#field2\").value;\r\n    const quantity = [...this.state.quantity];\r\n    quantity.push({ id: id, value: value });\r\n    this.setState({ quantity });\r\n  };\r\n\r\n  /* Alternative to reload the whole page:\r\n  handleReset = () => {\r\n    window.location.reload();\r\n  };\r\n */\r\n\r\n  handleReset = () => {\r\n    const quantity = [\r\n      //cloning doesn't work. It's necessary to do a deep copy but I don't know how to do it.\r\n      { id: \"A\", value: 1 },\r\n      { id: \"B\", value: 2 },\r\n      { id: \"C\", value: 3 },\r\n      { id: \"D\", value: 4 }\r\n    ];\r\n    this.setState({\r\n      quantity\r\n    }); // Because it's \"quantity : quantity\", it can be simplified to just one word.\r\n  };\r\n\r\n  handleRemove = qtyID => {\r\n    // It's necessary to pass the ID so React can know which element to remove.\r\n    const quantity = this.state.quantity.filter(i => i.id !== qtyID); // Creates a new array filtering out the selected ID.\r\n    this.setState({ quantity }); // Because it's \"quantity : quantity\", it can be simplified to just one word.\r\n  };\r\n\r\n  handleTotal = () => {\r\n    let x = 0;\r\n    this.state.quantity.map(i => (x += i.value));\r\n    return x;\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <React.Fragment>\r\n        <main className=\"container\">\r\n          <Counters\r\n            quantity={this.state.quantity}\r\n            onIncrement={this.handleIncrement}\r\n            onEmpty={this.handleEmpty}\r\n            onRemove={this.handleRemove}\r\n            onDecrement={this.handleDecrement}\r\n          />\r\n        </main>\r\n        <NavBar\r\n          onReset={this.handleReset}\r\n          qtdTipos={this.state.quantity.filter(i => i.value > 0).length}\r\n          qtdTotal={this.handleTotal()}\r\n        />\r\n        <div className=\"input-group input-group-sm\">\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text\">Product ID:</span>\r\n          </div>\r\n          <input className=\"form-control\" id=\"field1\" type=\"text\" />\r\n        </div>\r\n        <div className=\"input-group input-group-sm\">\r\n          <div className=\"input-group-prepend\">\r\n            <span className=\"input-group-text\">Product Qty:</span>\r\n          </div>\r\n          <input className=\"form-control\" id=\"field2\" type=\"number\" />\r\n        </div>\r\n        <button\r\n          className=\"btn btn-warning btn-sm m-2\"\r\n          onClick={() => this.handleUpdate()}>\r\n          Save\r\n        </button>\r\n      </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}